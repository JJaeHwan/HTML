<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="stylesheet" href="../css/public.css">
<script src="../js/jquery-3.6.3.min.js" type="text/javascript"></script>

<script type="text/javascript">
	$(function() {
		// bind 방식
		$('.btn1').on('click', function() {
			
			vnew = $('<input type="button" value="확인" class="btn1">');
			
			$(vnew).appendTo('#res1');
			
		})
		
		// delegate방식
		$(document).on('click', '.btn2', function() {
			
			vnew = $('<input type="button" value="확인" class="btn2">');
			
			$(vnew).appendTo('#res2');
			
		})
		
		// 해제 버튼
		$('#btn3').on('click', function() {
			$(document).off('click', 'btn2');
		})
		
		//추가버튼
		$('.btn4').on('click', function() {
			vfile = ('<div>');
			vfile += ('<input type="file" name="file">');
			vfile += ('<input type="button" value="삭제" class="del">');
			vfile += ('</div>');
			
// 			$(vfile).appendTo('#filebox');
			$('#filebox').append(vfile);
		})
		
		
	})
	
</script>

</head>
<body>


<div class="box">
	bind방식의 이벤트 핸들러 설정<br>
	새롭게 생성되는 요소는 이벤트 핸들러가 적용 되지 않는다. <br>
	<input type="button" value="확인" class="btn1">
	<br>
	
	<div id="res1"></div>
</div>

<div class="box">
	delegate 방식의 이벤트 핸들러 설정<br>
	기존의 요소나 새롭게 생성되는 요소에 똑같은 이벤트 핸들러가 적용 되어 실행된다.<br><br>
	<input type="button" value="확인" class="btn2">
	<br><br>
	<input type="button" value="해제" id="btn3">
	
	
	<div id="res2"></div>
</div>

<div class="box" id="filebox">
	delegate 방식의 이벤트 핸들러 설정<br>
	기존의 요소나 새롭게 생성되는 요소에 똑같은 이벤트 핸들러가 적용 되어 실행된다.<br><br>
	<input type="file" name="file">
	<input type="button" value="추가" class="btn4">
	<br><br>
	
</div>
</body>
</html>